// ======================================================================
// This source code form is subject to the terms of the Mozilla Public
// License, version 2.0. If a copy of the MPL was not distributed with 
// this file, you can obtain one at http://mozilla.org/MPL/2.0/.
// ======================================================================
using System;
using System.Collections.Generic;

namespace Chiisana {
	/// <summary>
	/// Represents a repository for MiME types.
	/// </summary>
	internal static class MiME {
		/// <summary>
		/// Contains each MiME type.
		/// </summary>
		private static readonly Dictionary<string, string> _Types;

		#region Abstract
		/// <summary>
		/// Process a MiME.
		/// </summary>
		/// <param name="ContentType">The content type.</param>
		/// <param name="Extension">The extension.</param>
		private static void _PS(string ContentType, string Extension) {
			// Set the extension.
			_Types[Extension] = ContentType;
		}

		/// <summary>
		/// Process each MiME.
		/// </summary>
		/// <param name="ContentType">The content type.</param>
		/// <param name="Extension">The extension.</param>
		private static void _PM(string ContentType, string Extension) {
			// Iterate through each MiME.
			foreach (string SingleExtension in Extension.Split(' ')) {
				// Process a single MiME.
				_PS(ContentType, SingleExtension);
			}
		}
		#endregion

		#region Constructor
		/// <summary>
		/// Initialize the MiME class.
		/// </summary>
		static MiME() {
			// Initialize a new instance of the Dictionary class.
			_Types = new Dictionary<string, string>(StringComparer.InvariantCultureIgnoreCase);
			// Initialize each MiME type.
			_PS("application/andrew-inset", "ez");
			_PS("application/applixware", "aw");
			_PS("application/atom+xml", "atom");
			_PS("application/atomcat+xml", "atomcat");
			_PS("application/atomsvc+xml", "atomsvc");
			_PS("application/ccxml+xml", "ccxml");
			_PS("application/cdmi-capability", "cdmia");
			_PS("application/cdmi-container", "cdmic");
			_PS("application/cdmi-domain", "cdmid");
			_PS("application/cdmi-object", "cdmio");
			_PS("application/cdmi-queue", "cdmiq");
			_PS("application/cu-seeme", "cu");
			_PS("application/davmount+xml", "davmount");
			_PS("application/docbook+xml", "dbk");
			_PS("application/dssc+der", "dssc");
			_PS("application/dssc+xml", "xdssc");
			_PS("application/ecmascript", "ecma");
			_PS("application/emma+xml", "emma");
			_PS("application/epub+zip", "epub");
			_PS("application/exi", "exi");
			_PS("application/font-tdpfr", "pfr");
			_PS("application/gml+xml", "gml");
			_PS("application/gpx+xml", "gpx");
			_PS("application/gxf", "gxf");
			_PS("application/hyperstudio", "stk");
			_PM("application/inkml+xml", "ink inkml");
			_PS("application/ipfix", "ipfix");
			_PS("application/java-archive", "jar");
			_PS("application/java-serialized-object", "ser");
			_PS("application/java-vm", "class");
			_PS("application/javascript", "js");
			_PS("application/json", "json");
			_PS("application/jsonml+json", "jsonml");
			_PS("application/lost+xml", "lostxml");
			_PS("application/mac-binhex40", "hqx");
			_PS("application/mac-compactpro", "cpt");
			_PS("application/mads+xml", "mads");
			_PS("application/marc", "mrc");
			_PS("application/marcxml+xml", "mrcx");
			_PM("application/mathematica", "ma nb mb");
			_PS("application/mathml+xml", "mathml");
			_PS("application/mbox", "mbox");
			_PS("application/mediaservercontrol+xml", "mscml");
			_PS("application/metalink+xml", "metalink");
			_PS("application/metalink4+xml", "meta4");
			_PS("application/mets+xml", "mets");
			_PS("application/mods+xml", "mods");
			_PM("application/mp21", "m21 mp21");
			_PS("application/mp4", "mp4s");
			_PM("application/msword", "doc dot");
			_PS("application/mxf", "mxf");
			_PM("application/octet-stream", "bin dms lrf mar so dist distz pkg bpk dump elc deploy");
			_PS("application/oda", "oda");
			_PS("application/oebps-package+xml", "opf");
			_PS("application/ogg", "ogx");
			_PS("application/omdoc+xml", "omdoc");
			_PM("application/onenote", "onetoc onetoc2 onetmp onepkg");
			_PS("application/oxps", "oxps");
			_PS("application/patch-ops-error+xml", "xer");
			_PS("application/pdf", "pdf");
			_PS("application/pgp-encrypted", "pgp");
			_PM("application/pgp-signature", "asc sig");
			_PS("application/pics-rules", "prf");
			_PS("application/pkcs10", "p10");
			_PM("application/pkcs7-mime", "p7m p7c");
			_PS("application/pkcs7-signature", "p7s");
			_PS("application/pkcs8", "p8");
			_PS("application/pkix-attr-cert", "ac");
			_PS("application/pkix-cert", "cer");
			_PS("application/pkix-crl", "crl");
			_PS("application/pkix-pkipath", "pkipath");
			_PS("application/pkixcmp", "pki");
			_PS("application/pls+xml", "pls");
			_PM("application/postscript", "ai eps ps");
			_PS("application/prs.cww", "cww");
			_PS("application/pskc+xml", "pskcxml");
			_PS("application/rdf+xml", "rdf");
			_PS("application/reginfo+xml", "rif");
			_PS("application/relax-ng-compact-syntax", "rnc");
			_PS("application/resource-lists+xml", "rl");
			_PS("application/resource-lists-diff+xml", "rld");
			_PS("application/rls-services+xml", "rs");
			_PS("application/rpki-ghostbusters", "gbr");
			_PS("application/rpki-manifest", "mft");
			_PS("application/rpki-roa", "roa");
			_PS("application/rsd+xml", "rsd");
			_PS("application/rss+xml", "rss");
			_PS("application/rtf", "rtf");
			_PS("application/sbml+xml", "sbml");
			_PS("application/scvp-cv-request", "scq");
			_PS("application/scvp-cv-response", "scs");
			_PS("application/scvp-vp-request", "spq");
			_PS("application/scvp-vp-response", "spp");
			_PS("application/sdp", "sdp");
			_PS("application/set-payment-initiation", "setpay");
			_PS("application/set-registration-initiation", "setreg");
			_PS("application/shf+xml", "shf");
			_PM("application/smil+xml", "smi smil");
			_PS("application/sparql-query", "rq");
			_PS("application/sparql-results+xml", "srx");
			_PS("application/srgs", "gram");
			_PS("application/srgs+xml", "grxml");
			_PS("application/sru+xml", "sru");
			_PS("application/ssdl+xml", "ssdl");
			_PS("application/ssml+xml", "ssml");
			_PM("application/tei+xml", "tei teicorpus");
			_PS("application/thraud+xml", "tfi");
			_PS("application/timestamped-data", "tsd");
			_PS("application/vnd.3gpp.pic-bw-large", "plb");
			_PS("application/vnd.3gpp.pic-bw-small", "psb");
			_PS("application/vnd.3gpp.pic-bw-var", "pvb");
			_PS("application/vnd.3gpp2.tcap", "tcap");
			_PS("application/vnd.3m.post-it-notes", "pwn");
			_PS("application/vnd.accpac.simply.aso", "aso");
			_PS("application/vnd.accpac.simply.imp", "imp");
			_PS("application/vnd.acucobol", "acu");
			_PM("application/vnd.acucorp", "atc acutc");
			_PS("application/vnd.adobe.air-application-installer-package+zip", "air");
			_PS("application/vnd.adobe.formscentral.fcdt", "fcdt");
			_PM("application/vnd.adobe.fxp", "fxp fxpl");
			_PS("application/vnd.adobe.xdp+xml", "xdp");
			_PS("application/vnd.adobe.xfdf", "xfdf");
			_PS("application/vnd.ahead.space", "ahead");
			_PS("application/vnd.airzip.filesecure.azf", "azf");
			_PS("application/vnd.airzip.filesecure.azs", "azs");
			_PS("application/vnd.amazon.ebook", "azw");
			_PS("application/vnd.americandynamics.acc", "acc");
			_PS("application/vnd.amiga.ami", "ami");
			_PS("application/vnd.android.package-archive", "apk");
			_PS("application/vnd.anser-web-certificate-issue-initiation", "cii");
			_PS("application/vnd.anser-web-funds-transfer-initiation", "fti");
			_PS("application/vnd.antix.game-component", "atx");
			_PS("application/vnd.apple.installer+xml", "mpkg");
			_PS("application/vnd.apple.mpegurl", "m3u8");
			_PS("application/vnd.aristanetworks.swi", "swi");
			_PS("application/vnd.astraea-software.iota", "iota");
			_PS("application/vnd.audiograph", "aep");
			_PS("application/vnd.blueice.multipass", "mpm");
			_PS("application/vnd.bmi", "bmi");
			_PS("application/vnd.businessobjects", "rep");
			_PS("application/vnd.chemdraw+xml", "cdxml");
			_PS("application/vnd.chipnuts.karaoke-mmd", "mmd");
			_PS("application/vnd.cinderella", "cdy");
			_PS("application/vnd.claymore", "cla");
			_PS("application/vnd.cloanto.rp9", "rp9");
			_PM("application/vnd.clonk.c4group", "c4g c4d c4f c4p c4u");
			_PS("application/vnd.cluetrust.cartomobile-config", "c11amc");
			_PS("application/vnd.cluetrust.cartomobile-config-pkg", "c11amz");
			_PS("application/vnd.commonspace", "csp");
			_PS("application/vnd.contact.cmsg", "cdbcmsg");
			_PS("application/vnd.cosmocaller", "cmc");
			_PS("application/vnd.crick.clicker", "clkx");
			_PS("application/vnd.crick.clicker.keyboard", "clkk");
			_PS("application/vnd.crick.clicker.palette", "clkp");
			_PS("application/vnd.crick.clicker.template", "clkt");
			_PS("application/vnd.crick.clicker.wordbank", "clkw");
			_PS("application/vnd.criticaltools.wbs+xml", "wbs");
			_PS("application/vnd.ctc-posml", "pml");
			_PS("application/vnd.cups-ppd", "ppd");
			_PS("application/vnd.curl.car", "car");
			_PS("application/vnd.curl.pcurl", "pcurl");
			_PS("application/vnd.dart", "dart");
			_PS("application/vnd.data-vision.rdz", "rdz");
			_PM("application/vnd.dece.data", "uvf uvvf uvd uvvd");
			_PM("application/vnd.dece.ttml+xml", "uvt uvvt");
			_PM("application/vnd.dece.unspecified", "uvx uvvx");
			_PM("application/vnd.dece.zip", "uvz uvvz");
			_PS("application/vnd.denovo.fcselayout-link", "fe_launch");
			_PS("application/vnd.dna", "dna");
			_PS("application/vnd.dolby.mlp", "mlp");
			_PS("application/vnd.dpgraph", "dpg");
			_PS("application/vnd.dreamfactory", "dfac");
			_PS("application/vnd.ds-keypoint", "kpxx");
			_PS("application/vnd.dvb.ait", "ait");
			_PS("application/vnd.dvb.service", "svc");
			_PS("application/vnd.dynageo", "geo");
			_PS("application/vnd.ecowin.chart", "mag");
			_PS("application/vnd.enliven", "nml");
			_PS("application/vnd.epson.esf", "esf");
			_PS("application/vnd.epson.msf", "msf");
			_PS("application/vnd.epson.quickanime", "qam");
			_PS("application/vnd.epson.salt", "slt");
			_PS("application/vnd.epson.ssf", "ssf");
			_PM("application/vnd.eszigno3+xml", "es3 et3");
			_PS("application/vnd.ezpix-album", "ez2");
			_PS("application/vnd.ezpix-package", "ez3");
			_PS("application/vnd.fdf", "fdf");
			_PS("application/vnd.fdsn.mseed", "mseed");
			_PM("application/vnd.fdsn.seed", "seed dataless");
			_PS("application/vnd.flographit", "gph");
			_PS("application/vnd.fluxtime.clip", "ftc");
			_PM("application/vnd.framemaker", "fm frame maker book");
			_PS("application/vnd.frogans.fnc", "fnc");
			_PS("application/vnd.frogans.ltf", "ltf");
			_PS("application/vnd.fsc.weblaunch", "fsc");
			_PS("application/vnd.fujitsu.oasys", "oas");
			_PS("application/vnd.fujitsu.oasys2", "oa2");
			_PS("application/vnd.fujitsu.oasys3", "oa3");
			_PS("application/vnd.fujitsu.oasysgp", "fg5");
			_PS("application/vnd.fujitsu.oasysprs", "bh2");
			_PS("application/vnd.fujixerox.ddd", "ddd");
			_PS("application/vnd.fujixerox.docuworks", "xdw");
			_PS("application/vnd.fujixerox.docuworks.binder", "xbd");
			_PS("application/vnd.fuzzysheet", "fzs");
			_PS("application/vnd.genomatix.tuxedo", "txd");
			_PS("application/vnd.geogebra.file", "ggb");
			_PS("application/vnd.geogebra.tool", "ggt");
			_PM("application/vnd.geometry-explorer", "gex gre");
			_PS("application/vnd.geonext", "gxt");
			_PS("application/vnd.geoplan", "g2w");
			_PS("application/vnd.geospace", "g3w");
			_PS("application/vnd.gmx", "gmx");
			_PS("application/vnd.google-earth.kml+xml", "kml");
			_PS("application/vnd.google-earth.kmz", "kmz");
			_PM("application/vnd.grafeq", "gqf gqs");
			_PS("application/vnd.groove-account", "gac");
			_PS("application/vnd.groove-help", "ghf");
			_PS("application/vnd.groove-identity-message", "gim");
			_PS("application/vnd.groove-injector", "grv");
			_PS("application/vnd.groove-tool-message", "gtm");
			_PS("application/vnd.groove-tool-template", "tpl");
			_PS("application/vnd.groove-vcard", "vcg");
			_PS("application/vnd.hal+xml", "hal");
			_PS("application/vnd.handheld-entertainment+xml", "zmm");
			_PS("application/vnd.hbci", "hbci");
			_PS("application/vnd.hhe.lesson-player", "les");
			_PS("application/vnd.hp-hpgl", "hpgl");
			_PS("application/vnd.hp-hpid", "hpid");
			_PS("application/vnd.hp-hps", "hps");
			_PS("application/vnd.hp-jlyt", "jlt");
			_PS("application/vnd.hp-pcl", "pcl");
			_PS("application/vnd.hp-pclxl", "pclxl");
			_PS("application/vnd.hydrostatix.sof-data", "sfd-hdstx");
			_PS("application/vnd.ibm.minipay", "mpy");
			_PM("application/vnd.ibm.modcap", "afp listafp list3820");
			_PS("application/vnd.ibm.rights-management", "irm");
			_PS("application/vnd.ibm.secure-container", "sc");
			_PM("application/vnd.iccprofile", "icc icm");
			_PS("application/vnd.igloader", "igl");
			_PS("application/vnd.immervision-ivp", "ivp");
			_PS("application/vnd.immervision-ivu", "ivu");
			_PS("application/vnd.insors.igm", "igm");
			_PM("application/vnd.intercon.formnet", "xpw xpx");
			_PS("application/vnd.intergeo", "i2g");
			_PS("application/vnd.intu.qbo", "qbo");
			_PS("application/vnd.intu.qfx", "qfx");
			_PS("application/vnd.ipunplugged.rcprofile", "rcprofile");
			_PS("application/vnd.irepository.package+xml", "irp");
			_PS("application/vnd.is-xpr", "xpr");
			_PS("application/vnd.isac.fcs", "fcs");
			_PS("application/vnd.jam", "jam");
			_PS("application/vnd.jcp.javame.midlet-rms", "rms");
			_PS("application/vnd.jisp", "jisp");
			_PS("application/vnd.joost.joda-archive", "joda");
			_PM("application/vnd.kahootz", "ktz ktr");
			_PS("application/vnd.kde.karbon", "karbon");
			_PS("application/vnd.kde.kchart", "chrt");
			_PS("application/vnd.kde.kformula", "kfo");
			_PS("application/vnd.kde.kivio", "flw");
			_PS("application/vnd.kde.kontour", "kon");
			_PM("application/vnd.kde.kpresenter", "kpr kpt");
			_PS("application/vnd.kde.kspread", "ksp");
			_PM("application/vnd.kde.kword", "kwd kwt");
			_PS("application/vnd.kenameaapp", "htke");
			_PS("application/vnd.kidspiration", "kia");
			_PM("application/vnd.kinar", "kne knp");
			_PM("application/vnd.koan", "skp skd skt skm");
			_PS("application/vnd.kodak-descriptor", "sse");
			_PS("application/vnd.las.las+xml", "lasxml");
			_PS("application/vnd.llamagraphics.life-balance.desktop", "lbd");
			_PS("application/vnd.llamagraphics.life-balance.exchange+xml", "lbe");
			_PS("application/vnd.lotus-1-2-3", "123");
			_PS("application/vnd.lotus-approach", "apr");
			_PS("application/vnd.lotus-freelance", "pre");
			_PS("application/vnd.lotus-notes", "nsf");
			_PS("application/vnd.lotus-organizer", "org");
			_PS("application/vnd.lotus-screencam", "scm");
			_PS("application/vnd.lotus-wordpro", "lwp");
			_PS("application/vnd.macports.portpkg", "portpkg");
			_PS("application/vnd.mcd", "mcd");
			_PS("application/vnd.medcalcdata", "mc1");
			_PS("application/vnd.mediastation.cdkey", "cdkey");
			_PS("application/vnd.mfer", "mwf");
			_PS("application/vnd.mfmp", "mfm");
			_PS("application/vnd.micrografx.flo", "flo");
			_PS("application/vnd.micrografx.igx", "igx");
			_PS("application/vnd.mif", "mif");
			_PS("application/vnd.mobius.daf", "daf");
			_PS("application/vnd.mobius.dis", "dis");
			_PS("application/vnd.mobius.mbk", "mbk");
			_PS("application/vnd.mobius.mqy", "mqy");
			_PS("application/vnd.mobius.msl", "msl");
			_PS("application/vnd.mobius.plc", "plc");
			_PS("application/vnd.mobius.txf", "txf");
			_PS("application/vnd.mophun.application", "mpn");
			_PS("application/vnd.mophun.certificate", "mpc");
			_PS("application/vnd.mozilla.xul+xml", "xul");
			_PS("application/vnd.ms-artgalry", "cil");
			_PS("application/vnd.ms-cab-compressed", "cab");
			_PM("application/vnd.ms-excel", "xls xlm xla xlc xlt xlw");
			_PS("application/vnd.ms-excel.addin.macroenabled.12", "xlam");
			_PS("application/vnd.ms-excel.sheet.binary.macroenabled.12", "xlsb");
			_PS("application/vnd.ms-excel.sheet.macroenabled.12", "xlsm");
			_PS("application/vnd.ms-excel.template.macroenabled.12", "xltm");
			_PS("application/vnd.ms-fontobject", "eot");
			_PS("application/vnd.ms-htmlhelp", "chm");
			_PS("application/vnd.ms-ims", "ims");
			_PS("application/vnd.ms-lrm", "lrm");
			_PS("application/vnd.ms-officetheme", "thmx");
			_PS("application/vnd.ms-pki.seccat", "cat");
			_PS("application/vnd.ms-pki.stl", "stl");
			_PM("application/vnd.ms-powerpoint", "ppt pps pot");
			_PS("application/vnd.ms-powerpoint.addin.macroenabled.12", "ppam");
			_PS("application/vnd.ms-powerpoint.presentation.macroenabled.12", "pptm");
			_PS("application/vnd.ms-powerpoint.slide.macroenabled.12", "sldm");
			_PS("application/vnd.ms-powerpoint.slideshow.macroenabled.12", "ppsm");
			_PS("application/vnd.ms-powerpoint.template.macroenabled.12", "potm");
			_PM("application/vnd.ms-project", "mpp mpt");
			_PS("application/vnd.ms-word.document.macroenabled.12", "docm");
			_PS("application/vnd.ms-word.template.macroenabled.12", "dotm");
			_PM("application/vnd.ms-works", "wps wks wcm wdb");
			_PS("application/vnd.ms-wpl", "wpl");
			_PS("application/vnd.ms-xpsdocument", "xps");
			_PS("application/vnd.mseq", "mseq");
			_PS("application/vnd.musician", "mus");
			_PS("application/vnd.muvee.style", "msty");
			_PS("application/vnd.mynfc", "taglet");
			_PS("application/vnd.neurolanguage.nlu", "nlu");
			_PM("application/vnd.nitf", "ntf nitf");
			_PS("application/vnd.noblenet-directory", "nnd");
			_PS("application/vnd.noblenet-sealer", "nns");
			_PS("application/vnd.noblenet-web", "nnw");
			_PS("application/vnd.nokia.n-gage.data", "ngdat");
			_PS("application/vnd.nokia.n-gage.symbian.install", "n-gage");
			_PS("application/vnd.nokia.radio-preset", "rpst");
			_PS("application/vnd.nokia.radio-presets", "rpss");
			_PS("application/vnd.novadigm.edm", "edm");
			_PS("application/vnd.novadigm.edx", "edx");
			_PS("application/vnd.novadigm.ext", "ext");
			_PS("application/vnd.oasis.opendocument.chart", "odc");
			_PS("application/vnd.oasis.opendocument.chart-template", "otc");
			_PS("application/vnd.oasis.opendocument.database", "odb");
			_PS("application/vnd.oasis.opendocument.formula", "odf");
			_PS("application/vnd.oasis.opendocument.formula-template", "odft");
			_PS("application/vnd.oasis.opendocument.graphics", "odg");
			_PS("application/vnd.oasis.opendocument.graphics-template", "otg");
			_PS("application/vnd.oasis.opendocument.image", "odi");
			_PS("application/vnd.oasis.opendocument.image-template", "oti");
			_PS("application/vnd.oasis.opendocument.presentation", "odp");
			_PS("application/vnd.oasis.opendocument.presentation-template", "otp");
			_PS("application/vnd.oasis.opendocument.spreadsheet", "ods");
			_PS("application/vnd.oasis.opendocument.spreadsheet-template", "ots");
			_PS("application/vnd.oasis.opendocument.text", "odt");
			_PS("application/vnd.oasis.opendocument.text-master", "odm");
			_PS("application/vnd.oasis.opendocument.text-template", "ott");
			_PS("application/vnd.oasis.opendocument.text-web", "oth");
			_PS("application/vnd.olpc-sugar", "xo");
			_PS("application/vnd.oma.dd2+xml", "dd2");
			_PS("application/vnd.openofficeorg.extension", "oxt");
			_PS("application/vnd.openxmlformats-officedocument.presentationml.presentation", "pptx");
			_PS("application/vnd.openxmlformats-officedocument.presentationml.slide", "sldx");
			_PS("application/vnd.openxmlformats-officedocument.presentationml.slideshow", "ppsx");
			_PS("application/vnd.openxmlformats-officedocument.presentationml.template", "potx");
			_PS("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "xlsx");
			_PS("application/vnd.openxmlformats-officedocument.spreadsheetml.template", "xltx");
			_PS("application/vnd.openxmlformats-officedocument.wordprocessingml.document", "docx");
			_PS("application/vnd.openxmlformats-officedocument.wordprocessingml.template", "dotx");
			_PS("application/vnd.osgeo.mapguide.package", "mgp");
			_PS("application/vnd.osgi.dp", "dp");
			_PS("application/vnd.osgi.subsystem", "esa");
			_PM("application/vnd.palm", "pdb pqa oprc");
			_PS("application/vnd.pawaafile", "paw");
			_PS("application/vnd.pg.format", "str");
			_PS("application/vnd.pg.osasli", "ei6");
			_PS("application/vnd.picsel", "efif");
			_PS("application/vnd.pmi.widget", "wg");
			_PS("application/vnd.pocketlearn", "plf");
			_PS("application/vnd.powerbuilder6", "pbd");
			_PS("application/vnd.previewsystems.box", "box");
			_PS("application/vnd.proteus.magazine", "mgz");
			_PS("application/vnd.publishare-delta-tree", "qps");
			_PS("application/vnd.pvi.ptid1", "ptid");
			_PM("application/vnd.quark.quarkxpress", "qxd qxt qwd qwt qxl qxb");
			_PS("application/vnd.realvnc.bed", "bed");
			_PS("application/vnd.recordare.musicxml", "mxl");
			_PS("application/vnd.recordare.musicxml+xml", "musicxml");
			_PS("application/vnd.rig.cryptonote", "cryptonote");
			_PS("application/vnd.rim.cod", "cod");
			_PS("application/vnd.rn-realmedia", "rm");
			_PS("application/vnd.rn-realmedia-vbr", "rmvb");
			_PS("application/vnd.route66.link66+xml", "link66");
			_PS("application/vnd.sailingtracker.track", "st");
			_PS("application/vnd.seemail", "see");
			_PS("application/vnd.sema", "sema");
			_PS("application/vnd.semd", "semd");
			_PS("application/vnd.semf", "semf");
			_PS("application/vnd.shana.informed.formdata", "ifm");
			_PS("application/vnd.shana.informed.formtemplate", "itp");
			_PS("application/vnd.shana.informed.interchange", "iif");
			_PS("application/vnd.shana.informed.package", "ipk");
			_PM("application/vnd.simtech-mindmapper", "twd twds");
			_PS("application/vnd.smaf", "mmf");
			_PS("application/vnd.smart.teacher", "teacher");
			_PM("application/vnd.solent.sdkm+xml", "sdkm sdkd");
			_PS("application/vnd.spotfire.dxp", "dxp");
			_PS("application/vnd.spotfire.sfs", "sfs");
			_PS("application/vnd.stardivision.calc", "sdc");
			_PS("application/vnd.stardivision.draw", "sda");
			_PS("application/vnd.stardivision.impress", "sdd");
			_PS("application/vnd.stardivision.math", "smf");
			_PM("application/vnd.stardivision.writer", "sdw vor");
			_PS("application/vnd.stardivision.writer-global", "sgl");
			_PS("application/vnd.stepmania.package", "smzip");
			_PS("application/vnd.stepmania.stepchart", "sm");
			_PS("application/vnd.sun.xml.calc", "sxc");
			_PS("application/vnd.sun.xml.calc.template", "stc");
			_PS("application/vnd.sun.xml.draw", "sxd");
			_PS("application/vnd.sun.xml.draw.template", "std");
			_PS("application/vnd.sun.xml.impress", "sxi");
			_PS("application/vnd.sun.xml.impress.template", "sti");
			_PS("application/vnd.sun.xml.math", "sxm");
			_PS("application/vnd.sun.xml.writer", "sxw");
			_PS("application/vnd.sun.xml.writer.global", "sxg");
			_PS("application/vnd.sun.xml.writer.template", "stw");
			_PM("application/vnd.sus-calendar", "sus susp");
			_PS("application/vnd.svd", "svd");
			_PM("application/vnd.symbian.install", "sis sisx");
			_PS("application/vnd.syncml+xml", "xsm");
			_PS("application/vnd.syncml.dm+wbxml", "bdm");
			_PS("application/vnd.syncml.dm+xml", "xdm");
			_PS("application/vnd.tao.intent-module-archive", "tao");
			_PM("application/vnd.tcpdump.pcap", "pcap cap dmp");
			_PS("application/vnd.tmobile-livetv", "tmo");
			_PS("application/vnd.trid.tpt", "tpt");
			_PS("application/vnd.triscape.mxs", "mxs");
			_PS("application/vnd.trueapp", "tra");
			_PM("application/vnd.ufdl", "ufd ufdl");
			_PS("application/vnd.uiq.theme", "utz");
			_PS("application/vnd.umajin", "umj");
			_PS("application/vnd.unity", "unityweb");
			_PS("application/vnd.uoml+xml", "uoml");
			_PS("application/vnd.vcx", "vcx");
			_PM("application/vnd.visio", "vsd vst vss vsw");
			_PS("application/vnd.visionary", "vis");
			_PS("application/vnd.vsf", "vsf");
			_PS("application/vnd.wap.wbxml", "wbxml");
			_PS("application/vnd.wap.wmlc", "wmlc");
			_PS("application/vnd.wap.wmlscriptc", "wmlsc");
			_PS("application/vnd.webturbo", "wtb");
			_PS("application/vnd.wolfram.player", "nbp");
			_PS("application/vnd.wordperfect", "wpd");
			_PS("application/vnd.wqd", "wqd");
			_PS("application/vnd.wt.stf", "stf");
			_PS("application/vnd.xara", "xar");
			_PS("application/vnd.xfdl", "xfdl");
			_PS("application/vnd.yamaha.hv-dic", "hvd");
			_PS("application/vnd.yamaha.hv-script", "hvs");
			_PS("application/vnd.yamaha.hv-voice", "hvp");
			_PS("application/vnd.yamaha.openscoreformat", "osf");
			_PS("application/vnd.yamaha.openscoreformat.osfpvg+xml", "osfpvg");
			_PS("application/vnd.yamaha.smaf-audio", "saf");
			_PS("application/vnd.yamaha.smaf-phrase", "spf");
			_PS("application/vnd.yellowriver-custom-menu", "cmp");
			_PM("application/vnd.zul", "zir zirz");
			_PS("application/vnd.zzazz.deck+xml", "zaz");
			_PS("application/voicexml+xml", "vxml");
			_PS("application/widget", "wgt");
			_PS("application/winhlp", "hlp");
			_PS("application/wsdl+xml", "wsdl");
			_PS("application/wspolicy+xml", "wspolicy");
			_PS("application/x-7z-compressed", "7z");
			_PS("application/x-abiword", "abw");
			_PS("application/x-ace-compressed", "ace");
			_PS("application/x-apple-diskimage", "dmg");
			_PM("application/x-authorware-bin", "aab x32 u32 vox");
			_PS("application/x-authorware-map", "aam");
			_PS("application/x-authorware-seg", "aas");
			_PS("application/x-bcpio", "bcpio");
			_PS("application/x-bittorrent", "torrent");
			_PM("application/x-blorb", "blb blorb");
			_PS("application/x-bzip", "bz");
			_PM("application/x-bzip2", "bz2 boz");
			_PM("application/x-cbr", "cbr cba cbt cbz cb7");
			_PS("application/x-cdlink", "vcd");
			_PS("application/x-cfs-compressed", "cfs");
			_PS("application/x-chat", "chat");
			_PS("application/x-chess-pgn", "pgn");
			_PS("application/x-conference", "nsc");
			_PS("application/x-cpio", "cpio");
			_PS("application/x-csh", "csh");
			_PM("application/x-debian-package", "deb udeb");
			_PS("application/x-dgc-compressed", "dgc");
			_PM("application/x-director", "dir dcr dxr cst cct cxt w3d fgd swa");
			_PS("application/x-doom", "wad");
			_PS("application/x-dtbncx+xml", "ncx");
			_PS("application/x-dtbook+xml", "dtb");
			_PS("application/x-dtbresource+xml", "res");
			_PS("application/x-dvi", "dvi");
			_PS("application/x-envoy", "evy");
			_PS("application/x-eva", "eva");
			_PS("application/x-font-bdf", "bdf");
			_PS("application/x-font-ghostscript", "gsf");
			_PS("application/x-font-linux-psf", "psf");
			_PS("application/x-font-otf", "otf");
			_PS("application/x-font-pcf", "pcf");
			_PS("application/x-font-snf", "snf");
			_PM("application/x-font-ttf", "ttf ttc");
			_PM("application/x-font-type1", "pfa pfb pfm afm");
			_PS("application/x-font-woff", "woff");
			_PS("application/x-freearc", "arc");
			_PS("application/x-futuresplash", "spl");
			_PS("application/x-gca-compressed", "gca");
			_PS("application/x-glulx", "ulx");
			_PS("application/x-gnumeric", "gnumeric");
			_PS("application/x-gramps-xml", "gramps");
			_PS("application/x-gtar", "gtar");
			_PS("application/x-hdf", "hdf");
			_PS("application/x-install-instructions", "install");
			_PS("application/x-iso9660-image", "iso");
			_PS("application/x-java-jnlp-file", "jnlp");
			_PS("application/x-latex", "latex");
			_PM("application/x-lzh-compressed", "lzh lha");
			_PS("application/x-mie", "mie");
			_PM("application/x-mobipocket-ebook", "prc mobi");
			_PS("application/x-ms-application", "application");
			_PS("application/x-ms-shortcut", "lnk");
			_PS("application/x-ms-wmd", "wmd");
			_PS("application/x-ms-wmz", "wmz");
			_PS("application/x-ms-xbap", "xbap");
			_PS("application/x-msaccess", "mdb");
			_PS("application/x-msbinder", "obd");
			_PS("application/x-mscardfile", "crd");
			_PS("application/x-msclip", "clp");
			_PM("application/x-msdownload", "exe dll com bat msi");
			_PM("application/x-msmediaview", "mvb m13 m14");
			_PM("application/x-msmetafile", "wmf wmz emf emz");
			_PS("application/x-msmoney", "mny");
			_PS("application/x-mspublisher", "pub");
			_PS("application/x-msschedule", "scd");
			_PS("application/x-msterminal", "trm");
			_PS("application/x-mswrite", "wri");
			_PM("application/x-netcdf", "nc cdf");
			_PS("application/x-nzb", "nzb");
			_PM("application/x-pkcs12", "p12 pfx");
			_PM("application/x-pkcs7-certificates", "p7b spc");
			_PS("application/x-pkcs7-certreqresp", "p7r");
			_PS("application/x-rar-compressed", "rar");
			_PS("application/x-research-info-systems", "ris");
			_PS("application/x-sh", "sh");
			_PS("application/x-shar", "shar");
			_PS("application/x-shockwave-flash", "swf");
			_PS("application/x-silverlight-app", "xap");
			_PS("application/x-sql", "sql");
			_PS("application/x-stuffit", "sit");
			_PS("application/x-stuffitx", "sitx");
			_PS("application/x-subrip", "srt");
			_PS("application/x-sv4cpio", "sv4cpio");
			_PS("application/x-sv4crc", "sv4crc");
			_PS("application/x-t3vm-image", "t3");
			_PS("application/x-tads", "gam");
			_PS("application/x-tar", "tar");
			_PS("application/x-tcl", "tcl");
			_PS("application/x-tex", "tex");
			_PS("application/x-tex-tfm", "tfm");
			_PM("application/x-texinfo", "texinfo texi");
			_PS("application/x-tgif", "obj");
			_PS("application/x-ustar", "ustar");
			_PS("application/x-wais-source", "src");
			_PM("application/x-x509-ca-cert", "der crt");
			_PS("application/x-xfig", "fig");
			_PS("application/x-xliff+xml", "xlf");
			_PS("application/x-xpinstall", "xpi");
			_PS("application/x-xz", "xz");
			_PM("application/x-zmachine", "z1 z2 z3 z4 z5 z6 z7 z8");
			_PS("application/xaml+xml", "xaml");
			_PS("application/xcap-diff+xml", "xdf");
			_PS("application/xenc+xml", "xenc");
			_PM("application/xhtml+xml", "xhtml xht");
			_PM("application/xml", "xml xsl");
			_PS("application/xml-dtd", "dtd");
			_PS("application/xop+xml", "xop");
			_PS("application/xproc+xml", "xpl");
			_PS("application/xslt+xml", "xslt");
			_PS("application/xspf+xml", "xspf");
			_PM("application/xv+xml", "mxml xhvml xvml xvm");
			_PS("application/yang", "yang");
			_PS("application/yin+xml", "yin");
			_PS("application/zip", "zip");
			_PS("audio/adpcm", "adp");
			_PM("audio/basic", "au snd");
			_PM("audio/midi", "mid midi kar rmi");
			_PS("audio/mp4", "mp4a");
			_PM("audio/mpeg", "mpga mp2 mp2a mp3 m2a m3a");
			_PM("audio/ogg", "oga ogg spx");
			_PS("audio/s3m", "s3m");
			_PS("audio/silk", "sil");
			_PM("audio/vnd.dece.audio", "uva uvva");
			_PS("audio/vnd.digital-winds", "eol");
			_PS("audio/vnd.dra", "dra");
			_PS("audio/vnd.dts", "dts");
			_PS("audio/vnd.dts.hd", "dtshd");
			_PS("audio/vnd.lucent.voice", "lvp");
			_PS("audio/vnd.ms-playready.media.pya", "pya");
			_PS("audio/vnd.nuera.ecelp4800", "ecelp4800");
			_PS("audio/vnd.nuera.ecelp7470", "ecelp7470");
			_PS("audio/vnd.nuera.ecelp9600", "ecelp9600");
			_PS("audio/vnd.rip", "rip");
			_PS("audio/webm", "weba");
			_PS("audio/x-aac", "aac");
			_PM("audio/x-aiff", "aif aiff aifc");
			_PS("audio/x-caf", "caf");
			_PS("audio/x-flac", "flac");
			_PS("audio/x-matroska", "mka");
			_PS("audio/x-mpegurl", "m3u");
			_PS("audio/x-ms-wax", "wax");
			_PS("audio/x-ms-wma", "wma");
			_PM("audio/x-pn-realaudio", "ram ra");
			_PS("audio/x-pn-realaudio-plugin", "rmp");
			_PS("audio/x-wav", "wav");
			_PS("audio/xm", "xm");
			_PS("chemical/x-cdx", "cdx");
			_PS("chemical/x-cif", "cif");
			_PS("chemical/x-cmdf", "cmdf");
			_PS("chemical/x-cml", "cml");
			_PS("chemical/x-csml", "csml");
			_PS("chemical/x-xyz", "xyz");
			_PS("image/bmp", "bmp");
			_PS("image/cgm", "cgm");
			_PS("image/g3fax", "g3");
			_PS("image/gif", "gif");
			_PS("image/ief", "ief");
			_PM("image/jpeg", "jpeg jpg jpe");
			_PS("image/ktx", "ktx");
			_PS("image/png", "png");
			_PS("image/prs.btif", "btif");
			_PS("image/sgi", "sgi");
			_PM("image/svg+xml", "svg svgz");
			_PM("image/tiff", "tiff tif");
			_PS("image/vnd.adobe.photoshop", "psd");
			_PM("image/vnd.dece.graphic", "uvi uvvi uvg uvvg");
			_PS("image/vnd.dvb.subtitle", "sub");
			_PM("image/vnd.djvu", "djvu djv");
			_PS("image/vnd.dwg", "dwg");
			_PS("image/vnd.dxf", "dxf");
			_PS("image/vnd.fastbidsheet", "fbs");
			_PS("image/vnd.fpx", "fpx");
			_PS("image/vnd.fst", "fst");
			_PS("image/vnd.fujixerox.edmics-mmr", "mmr");
			_PS("image/vnd.fujixerox.edmics-rlc", "rlc");
			_PS("image/vnd.ms-modi", "mdi");
			_PS("image/vnd.ms-photo", "wdp");
			_PS("image/vnd.net-fpx", "npx");
			_PS("image/vnd.wap.wbmp", "wbmp");
			_PS("image/vnd.xiff", "xif");
			_PS("image/webp", "webp");
			_PS("image/x-3ds", "3ds");
			_PS("image/x-cmu-raster", "ras");
			_PS("image/x-cmx", "cmx");
			_PM("image/x-freehand", "fh fhc fh4 fh5 fh7");
			_PS("image/x-icon", "ico");
			_PS("image/x-mrsid-image", "sid");
			_PS("image/x-pcx", "pcx");
			_PM("image/x-pict", "pic pct");
			_PS("image/x-portable-anymap", "pnm");
			_PS("image/x-portable-bitmap", "pbm");
			_PS("image/x-portable-graymap", "pgm");
			_PS("image/x-portable-pixmap", "ppm");
			_PS("image/x-rgb", "rgb");
			_PS("image/x-tga", "tga");
			_PS("image/x-xbitmap", "xbm");
			_PS("image/x-xpixmap", "xpm");
			_PS("image/x-xwindowdump", "xwd");
			_PM("message/rfc822", "eml mime");
			_PM("model/iges", "igs iges");
			_PM("model/mesh", "msh mesh silo");
			_PS("model/vnd.collada+xml", "dae");
			_PS("model/vnd.dwf", "dwf");
			_PS("model/vnd.gdl", "gdl");
			_PS("model/vnd.gtw", "gtw");
			_PS("model/vnd.mts", "mts");
			_PS("model/vnd.vtu", "vtu");
			_PM("model/vrml", "wrl vrml");
			_PM("model/x3d+binary", "x3db x3dbz");
			_PM("model/x3d+vrml", "x3dv x3dvz");
			_PM("model/x3d+xml", "x3d x3dz");
			_PS("text/cache-manifest", "appcache");
			_PM("text/calendar", "ics ifb");
			_PS("text/css", "css");
			_PS("text/csv", "csv");
			_PM("text/html", "html htm");
			_PS("text/n3", "n3");
			_PM("text/plain", "txt text conf def list log in");
			_PS("text/prs.lines.tag", "dsc");
			_PS("text/richtext", "rtx");
			_PM("text/sgml", "sgml sgm");
			_PS("text/tab-separated-values", "tsv");
			_PM("text/troff", "t tr roff man me ms");
			_PS("text/turtle", "ttl");
			_PM("text/uri-list", "uri uris urls");
			_PS("text/vcard", "vcard");
			_PS("text/vnd.curl", "curl");
			_PS("text/vnd.curl.dcurl", "dcurl");
			_PS("text/vnd.curl.scurl", "scurl");
			_PS("text/vnd.curl.mcurl", "mcurl");
			_PS("text/vnd.dvb.subtitle", "sub");
			_PS("text/vnd.fly", "fly");
			_PS("text/vnd.fmi.flexstor", "flx");
			_PS("text/vnd.graphviz", "gv");
			_PS("text/vnd.in3d.3dml", "3dml");
			_PS("text/vnd.in3d.spot", "spot");
			_PS("text/vnd.sun.j2me.app-descriptor", "jad");
			_PS("text/vnd.wap.wml", "wml");
			_PS("text/vnd.wap.wmlscript", "wmls");
			_PM("text/x-asm", "s asm");
			_PM("text/x-c", "c cc cxx cpp h hh dic");
			_PM("text/x-fortran", "f for f77 f90");
			_PS("text/x-java-source", "java");
			_PS("text/x-opml", "opml");
			_PM("text/x-pascal", "p pas");
			_PS("text/x-nfo", "nfo");
			_PS("text/x-setext", "etx");
			_PS("text/x-sfv", "sfv");
			_PS("text/x-uuencode", "uu");
			_PS("text/x-vcalendar", "vcs");
			_PS("text/x-vcard", "vcf");
			_PS("video/3gpp", "3gp");
			_PS("video/3gpp2", "3g2");
			_PS("video/h261", "h261");
			_PS("video/h263", "h263");
			_PS("video/h264", "h264");
			_PS("video/jpeg", "jpgv");
			_PM("video/jpm", "jpm jpgm");
			_PM("video/mj2", "mj2 mjp2");
			_PM("video/mp4", "mp4 mp4v mpg4");
			_PM("video/mpeg", "mpeg mpg mpe m1v m2v");
			_PS("video/ogg", "ogv");
			_PM("video/quicktime", "qt mov");
			_PM("video/vnd.dece.hd", "uvh uvvh");
			_PM("video/vnd.dece.mobile", "uvm uvvm");
			_PM("video/vnd.dece.pd", "uvp uvvp");
			_PM("video/vnd.dece.sd", "uvs uvvs");
			_PM("video/vnd.dece.video", "uvv uvvv");
			_PS("video/vnd.dvb.file", "dvb");
			_PS("video/vnd.fvt", "fvt");
			_PM("video/vnd.mpegurl", "mxu m4u");
			_PS("video/vnd.ms-playready.media.pyv", "pyv");
			_PM("video/vnd.uvvu.mp4", "uvu uvvu");
			_PS("video/vnd.vivo", "viv");
			_PS("video/webm", "webm");
			_PS("video/x-f4v", "f4v");
			_PS("video/x-fli", "fli");
			_PS("video/x-flv", "flv");
			_PS("video/x-m4v", "m4v");
			_PM("video/x-matroska", "mkv mk3d mks");
			_PS("video/x-mng", "mng");
			_PM("video/x-ms-asf", "asf asx");
			_PS("video/x-ms-vob", "vob");
			_PS("video/x-ms-wm", "wm");
			_PS("video/x-ms-wmv", "wmv");
			_PS("video/x-ms-wmx", "wmx");
			_PS("video/x-ms-wvx", "wvx");
			_PS("video/x-msvideo", "avi");
			_PS("video/x-sgi-movie", "movie");
			_PS("video/x-smv", "smv");
			_PS("x-conference/x-cooltalk", "ice");
		}
		#endregion

		#region Methods
		/// <summary>
		/// Find the MiME.
		/// </summary>
		/// <param name="Extension">The extension.</param>
		public static string Find(string Extension) {
			// Check if the extension is valid.
			if (Extension != null) {
				// Remove leading characters.
				Extension = Extension.TrimStart('.');
				// Check if the extension is known.
				if (_Types.ContainsKey(Extension)) {
					// Return the MiME.
					return _Types[Extension];
				}
			}
			// Return the default MiME type.
			return "text/plain";
		}
		#endregion
	}
}